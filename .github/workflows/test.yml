name: Test

on:
  push:
    branches: [master, main, staging]
  pull_request:
    branches: [master, main, staging]

jobs:
  test-server:
    runs-on: ubuntu-latest

    services:
      valkey:
        image: valkey/valkey:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "valkey-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            server/bun.lockb
          key: ${{ runner.os }}-bun-server-${{ hashFiles('server/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-server-

      - name: Install server dependencies
        run: |
          cd server
          bun install

      - name: Run server tests
        run: |
          cd server
          bun test
        env:
          GAME_DATA_DIR: ./assets/games/
          VALKEY_URI: valkey://localhost:6379

  test-client:
    runs-on: ubuntu-latest

    services:
      valkey:
        image: valkey/valkey:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "valkey-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            server/bun.lockb
            client/bun.lockb
          key: ${{ runner.os }}-bun-all-${{ hashFiles('server/bun.lockb', 'client/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-all-

      - name: Setup Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: "npm"
          cache-dependency-path: |
            client/package-lock.json

      - name: Install server dependencies
        run: |
          cd server
          bun install

      - name: Install client dependencies
        run: |
          cd client
          bun install

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          cd client
          npx playwright install --with-deps

      - name: Build client
        run: |
          cd client
          npm run build

      - name: Run browser tests
        run: |
          cd client
          npm run test
        env:
          PUBLIC_API_URL: http://localhost:3000/
          PUBLIC_SOCKET_URL: ws://localhost:3000/ws
          BASE_URL: http://localhost:5173

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-22.x
          path: client/playwright-report/
          retention-days: 7
